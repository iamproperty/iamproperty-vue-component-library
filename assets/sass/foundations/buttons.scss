@use "../_func.scss" as *;

// #region button primary
.btn {

  --btn-margin: #{rem(16)};

  @include media-breakpoint-up(sm) { 

    --btn-margin: #{rem(14)};
  }


  &:not(.btn-secondary)[class*="colour-"]{
    --colour-btn-bg: var(--colour);
    --colour-btn-border: var(--colour);
  }

  &:is(.colour-primary,.colour-dark,.colour-danger,.colour-black) {
    --colour-btn: #{$colour-inverted};
  }

  display: inline-block;
  font-weight: bold;
  text-align: left;
  text-decoration: none;
  vertical-align: middle;
  cursor: pointer;
  user-select: none;

  background: var(--colour-btn-bg);
  border: 2px solid var(--colour-btn-border);
  color: var(--colour-btn);

  font-size: rem(18);
  line-height: rem(24);
  padding: calc(rem(12) - 2px) calc(rem(40) - 2px);
  border-radius: rem(24);
  margin-bottom: var(--btn-margin);
  margin-right: var(--btn-margin);
  transition: background .5s, color .5s;
  height: auto;
  max-width: fit-content;
  appearance: none;
  white-space: nowrap;

  a:is(:hover, :focus, .hover, :focus-within):not([disabled],:active, .active) &,
  &:is(:hover, :focus, .hover, :focus-within):not([disabled],:active, .active) {
    outline: 0;
    text-decoration: none;

    background: var(--colour-btn-bg-hover);
    color: var(--colour-btn-hover);
    border-radius: rem(24);
  }

  a:is(:active, .active):not([disabled]) &,
  &:is(:active, .active):not([disabled]) {
    
    filter: brightness(85%);
    transition: background .1s, color .1s;
    color: var(--colour-btn);
    border-radius: rem(24);
  }

  a:disabled &,
  &:disabled {
    opacity: 0.4;
    cursor: not-allowed;
  }
}
// #endregion

// #region secondary button
.btn-secondary {

  background: var(--colour-btn-secondary-bg);
  border: 2px solid var(--colour-btn-secondary-border);
  color: var(--colour-btn-secondary);
}

a:is(:hover, :focus, .hover, :active, .active):not([disabled]) .btn-secondary,
.btn-secondary:is(:hover, :focus, .hover, :focus-within, :active, .active):not([disabled]) {
  background: var(--colour-btn-secondary-bg-hover);
  color: var(--colour-btn-secondary-hover);
}
// #endregion

// #region button with icon
.btn {
  &[class*="fa-"]:before {

    font-family: "Font Awesome 6 Pro";
    margin-right: 1rem;
  }

  [class*="fa-"]{
    
    font-family: "Font Awesome 6 Pro";
    margin-right: 1rem;

    font-style: inherit;
    &:not(:first-child){
      margin-left: 1rem;
      margin-right: 0;
    }
  }
}
// #endregion

// #region button with prompt 
.btn.btn--prompt {
  &:after {
    content: "";
    height: rem(24);
    width: rem(16);
    display: inline-block;
    background: currentColor;
    mask-image: var(--icon-arrow);
    mask-size: 100%;
    mask-repeat: no-repeat;
    mask-position: 50% 50%;
    -webkit-mask-image: var(--icon-arrow);
    -webkit-mask-size: 100%;
    -webkit-mask-repeat: no-repeat;
    -webkit-mask-position: 50% 50%;
    vertical-align: bottom;
    margin-left: 1rem;
  }

  
  a:is(:hover, :focus, .hover):not([disabled], :active, .active) &,
  &:is(:hover, :focus, .hover):not([disabled], :active, .active) {
    &:after {
      margin-left: 1.5rem;
      margin-right: -0.5rem;
    }
  }
}
// #endregion

// #region button small and tag
.btn.btn-sm {

  padding: em(8) em(32);
}
// #endregion

// #region btn compact
.btn-compact {
  padding: calc(rem(12) - 2px)!important;
  margin-bottom: rem(8)!important;
  margin-right: rem(8)!important;

  text-align: center;
  width: calc(rem(48) - 4px);
  min-width: calc(rem(48) - 4px);
  max-width: calc(rem(48) - 4px);
  height: calc(rem(48) - 4px)!important;
  text-indent: -300px;
  overflow: hidden;

  position: relative;

  &:before {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    text-indent: 0;
    line-height: calc(3rem - 6px);
    font-weight: 900;
  }

  &.btn-secondary {
    
    --colour-btn-border: transparent;
    border-color: transparent;

    &:not([class*="colour-"]){
      --colour: var(--colour-light)
    }
  }

  &.btn-secondary:is(:hover, :focus, .hover, :active, .active, :focus-within):not([disabled]) {
    background-color: var(--colour);
    color: var(--colour-primary);

    &:is(.colour-primary,.colour-dark,.colour-danger,.colour-black) {
      color: var(--colour-inverted);
    }
  }
}
// #endregion

// #region btn with colour success
.btn.colour-success {

  --colour-btn-bg-hover: var(--colour);
  --colour-btn-border-hover: var(--colour);
  position: relative;
  padding-left: rem(56);
  padding-right: rem(56);

  a:is(:hover, :focus, .hover):not([disabled], :active, .active) &,
  &:is(:hover, :focus, .hover):not([disabled], :active, .active) {

    padding-left: rem(40);
    padding-right: rem(40);

    &:before {
      content: "\f00c";
      font-family: "Font Awesome 6 Pro";
      margin-right: 1rem;
      font-style: inherit;
      width: 1rem;
      display: inline-block;
      height: rem(24);
      vertical-align: bottom;
    }
  }


}
// #endregion

// #region Select as button

.btn:has(select) {
  position: relative;
  padding-right: rem(56);

  &:not(.mw-100){
    max-width: rem(112 + 40 + 56);
  }

  select {
    
    padding: calc(rem(12) - 2px) calc(rem(40) - 2px);
    margin: calc(rem(-12)) calc(rem(-40));
    
    padding-right: rem(56);
    margin-right: rem(-56);
    border-radius: rem(24);
    appearance: none;
    background: none;
    border: none!important;
    color: inherit;
    display: block;
    min-width: calc(100% + rem(40) + rem(56));
    outline: none;
    font-weight: bold;
    
    option {
      padding: 0;
      text-align: left;
      color: var(--colour-primary);
    }
  }


  &:after {
    position: absolute;
    top: rem(8);
    right: rem(40);

    content: "";
    height: rem(24);
    width: rem(16);
    display: inline-block;
    background: currentColor;
    mask-image: var(--icon-arrow);
    mask-size: 100%;
    mask-repeat: no-repeat;
    mask-position: 50% 50%;
    -webkit-mask-image: var(--icon-arrow);
    -webkit-mask-size: 100%;
    -webkit-mask-repeat: no-repeat;
    -webkit-mask-position: 50% 50%;
    vertical-align: bottom;
    margin-left: 1rem;
    transform: rotate(90deg);
    pointer-events: none;
  }

  &.active:after{
    transform: rotate(-90deg);
  }
}

.btn:has(select:focus):after{
  transform: rotate(-90deg);
}

// #endregion



// #region button that opens up a filter dialog
.btn-filter {
  &:after {
    content: "";
  
    display: inline-block;
    margin-left: 1em;
    margin-bottom: -0.15em;
    height: 1em;
    width: 1em;
    z-index: var(--index-focus);
    background: currentColor;
    mask-image: var(--icon-filter);
    mask-size: 100%;
    mask-repeat: no-repeat;
    mask-position: 50% 50%;
    -webkit-mask-image: var(--icon-filter);
    -webkit-mask-size: 100%;
    -webkit-mask-repeat: no-repeat;
    -webkit-mask-position: 50% 50%;

  }
}
// #endregion


// #region Tertiary Button

.btn.btn-tertiary {

  background-color: transparent;
  border: none;
  color: var(--colour-link);
  margin: 0 var(--btn-margin) var(--btn-margin) 0;
  padding: 0;
  font-size: rem(18);
  font-weight: normal;
  line-height: rem(24);
  min-height: rem(24);
  position: relative;

  &:not(.text-decoration-none):after {
    position: absolute;
    content: "";
    top: 100%;
    left: 50%;
    height: 2px;
    width: 100%;
    transform: translate(-50%,0);
    background: var(--colour-underline);
    transition: width 0.5s;
  }

  [class*=fa-] {
    margin-left: 0;
    margin-right: 0.5rem;
  }
  [class*=fa-]:not(:first-child) {
    margin-left: 0.5rem;
    margin-right: 0;
  }

  &:is(:hover, :focus, .hover, :focus-within):not([disabled], :active, .active) {

    &:after {
      width: 60%;
    }
  }
  &:is(:active, .active):not([disabled]) {

    color: var(--colour-active);
  }

}

