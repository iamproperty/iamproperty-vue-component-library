@use "../func" as *;

:root {
  // Custom variable values only support SassScript inside `#{}`.
  @each $var, $value in $vars {
    #{$var}: #{$value};
  }

  @include media-breakpoint-up(md) {
    
    @each $var, $value in $varsMD {
      #{$var}: #{$value};
    }
  }
  --bs-body-bg: white;
  --colour-body-theme: rgba(var(--colour-body-rgb), var(--alpha, 1));
  --colour-underline: var(--colour-secondary);
  --colour-heading: var(--colour-primary);
  --alpha: var(--bs-bg-opacity,1);
  --#{$variable-prefix}gradient: #{$gradient};
  --content-max-width: #{$content-max-width};
  --colour-brand: var(--colour-primary-theme);
}

@media screen and (prefers-color-scheme: dark) {
  :root {
    --bs-body-bg: var(--colour-primary-theme);
    --colour-body: white;
    --colour-heading: white;
    --colour-link: white;
    --colour-hover: white;
    //--colour-active: white;
    --colour-underline: white;
    --colour-border: white;
    --colour-brand: white;
  }

  body .text-primary {
    color: white!important;
  }
}


@media screen {
  [class*="bg-"] {
    --colour-body: var(--colour-primary-theme);
    --colour-heading: var(--colour-primary-theme);
    color: var(--colour-body);
  }
  /* Override the colours when on a drark background */
  .bg-primary:not(.prevent-invert),
  .bg-dark:not(.prevent-invert),
  .bg-danger:not(.prevent-invert),
  .invert-colours {
    
    @if $compatible != "true" {
      > * {

        --colour-secondary-rgb: 255,255,255;
        --colour-primary-rgb: 255,255,255;
        --colour-secondary: white;
        --colour-primary: white;
      }
      --colour-body: white;
      --colour-link: white;
      --colour-hover: white;
      --colour-active: white;
      --colour-heading: white;
      --colour-underline: white;
      --colour-border: white;
    }
    color: white;
  }

  .bg-light:not(.prevent-invert) {
    --bs-body-bg: var(--colour-light-theme);
    --colour-heading: var(--colour-dark);
    color: var(--colour-dark);
  }
}