@use "../func" as *;

:root {
  // Custom variable values only support SassScript inside `#{}`.
  @each $var, $value in $vars {
    #{$var}: #{$value};
  }

  @include media-breakpoint-up(md) {
    
    @each $var, $value in $varsMD {
      #{$var}: #{$value};
    }
  }
  --bs-body-bg: white;
  --colour-underline: var(--colour-secondary);
  --colour-heading: var(--colour-primary);
  --alpha: var(--bs-bg-opacity,1);
  --#{$variable-prefix}gradient: #{$gradient};
  --content-max-width: #{$content-max-width};
  --colour-brand: var(--colour-primary);

  /* Button colours */
  --btn-bg: var(--colour-warning);
  --btn-text: var(--colour-primary);
  --btn-hover-text: var(--colour-primary);
  --btn-tertiary-bg: var(--colour-primary);
  --btn-tertiary-hover-text: white;
}

@media screen and (prefers-color-scheme: dark) {
  :root {
    --bs-body-bg: var(--colour-primary);
    @include invert-colours();
  }

  body .text-primary {
    color: white!important;
  }
}

@media screen {
  [class*="bg-"]:not(.bg-primary):not(.bg-dark):not(.bg-danger):not(.invert-colours) {

    @include reset-colours();

    --colour-body: var(--colour-primary);
    --colour-heading: var(--colour-primary);
    color: var(--colour-body);

    --btn-bg: var(--colour-primary);
    --btn-text: white;
  }

  /* Override the colours when on a drark background */
  .bg-primary:not(.prevent-invert),
  .bg-dark:not(.prevent-invert),
  .bg-danger:not(.prevent-invert),
  .invert-colours {
    
    @if $compatible != "true" {
      
      @include invert-colours();
    }
    color: white;
  }

  .bg-dark:not(.prevent-invert),
  .bg-danger:not(.prevent-invert),
  .invert-colours {
    
    --colour-underline: white;
  }

  .bg-light[class*="bg-"]:not(.bg-primary):not(.bg-dark):not(.bg-danger):not(.prevent-invert) {
    --bs-body-bg: var(--colour-light-theme);
    --colour-heading: var(--colour-dark);
    color: var(--colour-dark);
  }
}