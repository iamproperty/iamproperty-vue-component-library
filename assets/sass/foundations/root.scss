@use "../func" as *;

@import "../../../node_modules/bootstrap/scss/_root.scss";

:root {
  // Print out the $vars array setup in the variables file so they can be used as CSS vars
  // Custom variable values only support SassScript inside `#{}`.
  @each $var, $value in $vars {
    #{$var}: #{$value};
  }

  // Add in media query based updates to the global vars like updating the heading 1 font size
  @include media-breakpoint-up(sm) {
    
    @each $var, $value in $varsSM {
      #{$var}: #{$value};
    }
  }

  @include media-breakpoint-up(md) {
    
    @each $var, $value in $varsMD {
      #{$var}: #{$value};
    }
  }

  // Extra vars needed
  --content-max-width: #{$content-max-width};
  
  --colour-brand: var(--colour-primary);
  
}

// Dark mode; functional colours get updated
@media screen and (prefers-color-scheme: dark) {
  :root {
    @include invert-colours();
  }

  body .text-primary {
    color: #{$colour-inverted}!important;
  }

  
}

@media screen {

  // Reset the colours of lighter backgrounds to make sure they aren't over written by dark mode. Some other tweaks to colours are applied
  [class*="bg-"]:not(.bg-primary):not(.bg-dark):not(.bg-danger):not(.bg-canvas):not(.invert-colours) {

    @include reset-colours();

    --colour-body: var(--colour-primary);
    --colour-heading: var(--colour-primary);
    color: var(--colour-body);
    --colour-underline: var(--colour-primary);
  }

  

  // Slight colour adjustments on the light background to match brand guidelines
  .bg-light[class*="bg-"]:not(.bg-primary):not(.bg-dark):not(.bg-danger):not(.prevent-invert) {
    --colour-canvas: var(--colour-light);
    --colour-heading: var(--colour-dark);
    color: var(--colour-dark);
  }

  // Override the colours when on a dark background, similiar to dark mode but on a module level
  .bg-primary:not(.prevent-invert),
  .bg-dark:not(.prevent-invert),
  .bg-danger:not(.prevent-invert),
  .bg-black:not(.prevent-invert),
  .invert-colours {
    
    --btn-bg: #{$colour-inverted};

    @if $compatible != "true" {
      
      @include invert-colours();
    }
    color: #{$colour-inverted};
  }


  // Only update the the colour of the underline on dark backgrounds except the primary as the secondary colour looks good on it
  .bg-dark:not(.prevent-invert),
  .bg-danger:not(.prevent-invert),
  .bg-black:not(.prevent-invert),
  .invert-colours {
    
    --colour-underline: #{$colour-inverted};
  }
}



@include media-breakpoint-up(md) {

  .invert-colours-md {
    
    @if $compatible != "true" {
      
      @include invert-colours();
    }
    color: #{$colour-inverted};
    --colour-underline: #{$colour-inverted};
  }

  [class*="bg-"].bg-md-transparent {
    background: transparent!important;
  }
}