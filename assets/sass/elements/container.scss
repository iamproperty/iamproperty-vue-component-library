@use 'sass:math';
@use '../_func.scss' as *;

// #region container
.container {
  display: block;
  margin-left: auto;
  margin-right: auto;
  padding: var(--container-padding);

  grid-column: container !important;
  width: 100%;

  &:not(.container-fluid) {
    max-width: var(--container-max-width);
  }

  .container:not(.container-xs-breakout) {
    padding-left: 0;
    padding-right: 0;
    padding-bottom: 0;
    padding-top: 0;
  }

  &[class*='bg-'] {
    padding-top: #{rem(48)};
    padding-bottom: #{rem(32)};
  }

  &[class*='bg-'] + .container:not([class*='bg-']) {
    padding-top: #{rem(32)};
  }

  // Fix the clearing for containers
  &:before {
    display: table;
    clear: both;
    content: '';
  }
  &:after {
    display: table;
    clear: both;
    content: '';
  }

  &.container-xs-breakout {
    margin-left: -1.25rem;
    margin-right: -1.25rem;
    width: calc(100% + 2.5rem);

    @include media-breakpoint-up(sm) {
      margin-left: auto;
      margin-right: auto;
      width: 100%;
    }
  }
}

:host .container {
  display: block;
  margin-left: auto;
  margin-right: auto;
  padding: var(--container-padding);
  width: 100%;
}

// replicate container padding-bottom
main > .row {
  padding-bottom: #{rem(16)};

  &[class*='bg-'] {
    padding-top: #{rem(48)};
    padding-bottom: #{rem(32)};
  }

  &[class*='bg-'] + :is(.row, .container):not([class*='bg-']) {
    padding-top: #{rem(32)};
  }
}
// #endregion

// #region Circles
.container {
  &:has(.circle) {
    position: relative;
    z-index: 1;
  }

  > .circle {
    position: absolute;
    z-index: var(--index-below);
    border-width: 3px;
  }

  // Default pattern
  &:not([class*='circle-pattern-']) > .circle {
    font-size: rem(300);
    top: rem(-75);
    left: rem(-200);
  }

  &:not([class*='circle-pattern-']) > .circle ~ .circle {
    font-size: rem(350);
    top: auto;
    left: auto;
    right: rem(-100);
    bottom: rem(-200);
  }

  @include media-breakpoint-up(sm) {
    &:not([class*='circle-pattern-']) > .circle {
      font-size: rem(450);
      top: rem(-50);
      left: rem(-175);
    }

    &:not([class*='circle-pattern-']) > .circle ~ .circle {
      font-size: rem(500);
      right: rem(-150);
      bottom: rem(-150);
    }
  }

  // Pattern 2
  &.circle-pattern-2 > .circle {
    font-size: rem(300);
    top: rem(-75);
    right: rem(-200);
  }

  &.circle-pattern-2 > .circle ~ .circle {
    font-size: rem(450);
    top: auto;
    bottom: rem(-50);
    left: rem(-175);
  }

  @include media-breakpoint-up(sm) {
    &.circle-pattern-2 > .circle {
      font-size: rem(450);
      top: rem(-75);
      right: rem(-200);
    }
    &.circle-pattern-2 > .circle ~ .circle {
      font-size: rem(500);
      bottom: rem(-75);
      left: rem(-200);
    }
  }

  // Desktop container adjustment
  @include media-breakpoint-up(md) {
    > .circle {
      margin-left: rem(60);
      margin-right: rem(60);
    }
  }
}
// #endregion
