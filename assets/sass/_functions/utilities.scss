@use "functions" as *;

@import "../../../node_modules/bootstrap/scss/utilities";

// #region Sizing
/* Enhance the max width utility to include fit-content which can come in handy for flex-box based layouts. */
$utilities: map-merge(
  $utilities,
  (
    "max-width": (
      responsive: true,
      property: max-width,
      class: mw,
      values: (
        100: 100%,
        fit-content: fit-content
      )
    ),
    "min-width": (
      responsive: true,
      property: min-width,
      class: min,
      values: (
        100: 100%,
        fit-content: fit-content
      )
    )
  )
);

$utilities: map-merge(
  $utilities,
  (
    "object-fit": (
      property: object-fit,
      class: object,
      values: (
        cover: cover,
        contain: contain
      )
    )
  )
);
//  #endregion

// #region Add to line height classes 
$utilities: map-merge(
  $utilities,
  (
    "line-height": (
      property: line-height,
      class: lh,
      values: (
        0: 0,
        1: 1,
        /*
        sm: $line-height-sm,
        base: $line-height-base,
        lg: $line-height-lg,
        */
      )
    )
  )
);





// #endregion

// #region Remove Border colour utitlity classes
$utilities: map-merge(
  $utilities,
  (
    "border-color": null
  )
);
// #endregion

// #region Remove floats - They are too unpredictable and it is preferred to use flex or grid
$utilities: map-merge(
  $utilities,
  (
    "float": null
  )
);
// #endregion

// #region Fonts
$utilities: map-merge(
  $utilities,
  (
    "font-body": (
      responsive: false,
      property: font-family,
      class: font,
      values: (
        body: var(--font-body)
      )
    )
  )
);
//  #endregion

// #region Gradient colours 

$utilities: map-merge(
  $utilities,
  (
    "gradient-color": (
      property: background-image,
      class: gradient,
      local-vars: (
        "gradient-direction": 180deg
      ),
      values:
      (
        "secondary": linear-gradient(var(--gradient-direction), var(--colour-secondary) 0, transparent 100%),
        "primary": linear-gradient(var(--gradient-direction), var(--colour-primary) 0, transparent 100%),
        "info": linear-gradient(var(--gradient-direction), var(--colour-info) 0, transparent 100%)
      )
    ),
    "colour": (
      property: --colour,
      class: colour,
      values:
      (
        "primary": var(--colour-primary),
        "secondary": var(--colour-secondary),
        "info": var(--colour-info),
        "success": var(--colour-success),
        "warning": var(--colour-warning),
        "danger": var(--colour-danger),
        "light": var(--colour-light),
        "dark": var(--colour-dark),
        "admin": var(--colour-admin)
      )
    )
  )
);
$utilities: map-merge(
  $utilities,
  (
    "gradient-direction": (
      css-var: true,
      class: gradient-direction,
      values:
      (
        "left": 90deg,
        "right": -90deg,
        "up": 360deg
      )
    )
  )
);



// #endregion