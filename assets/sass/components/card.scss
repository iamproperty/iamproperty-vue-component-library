@use "../_func.scss" as *;

// #region Default card
.card {
  --card-icon-right: 1rem;
  box-shadow: var(--card-box-shadow);
  border-radius: var(--card-border-radius);
  position: relative;
  font-weight: bold;
  font-size: rem(18);
  line-height: rem(24);
  color: var(--colour-primary);
  min-height: 100%;
  width: 100%;
  text-align: left;
  display: block;
  overflow: hidden;
  z-index: 0;
  background: var(--colour-canvas-2);
  outline: var(--contrast-outline-width, 0px) solid var(--colour-primary);
  outline-offset: -1px;

  &.border-0 {
    box-shadow: none;
    --card-left-padding: 0rem;
    outline-offset: 1px!important;
  }

  &__body {
    position: relative;
    padding: var(--card-top-padding) var(--card-right-padding) var(--card-bottom-padding) var(--card-left-padding);
    z-index: -1;
  }

  &:before,
  &:after {
    content: "";
    position: absolute;
    right: var(--card-icon-right);
    bottom: var(--card-bottom-padding);
    height: rem(24);
    width: rem(24);
    background: var(--colour-warning);
    border-radius: 50%;
  }

  &:after {
    background: var(--colour-primary-theme);
    mask-image: var(--icon-arrow);
    mask-size: 50%;
    mask-repeat: no-repeat;
    mask-position: 50% 50%;
    -webkit-mask-image: var(--icon-arrow);
    -webkit-mask-size: 50%;
    -webkit-mask-repeat: no-repeat;
    -webkit-mask-position: 50% 50%;
    z-index: 2;
  }

  &:is(:hover,:focus,.hover) {
    --card-icon-right: 0.5rem;
    outline: 2px solid var(--colour, var(--colour-primary));
    outline-offset: -2px;
  }
  
  // Update arrow cololur
  &:not([class*="colour-"]):is(:hover,:focus,.hover) {

    &:before {
      background: var(--colour-primary-theme);
    }
    &:after {
      background: #ffffff;
    }
  }

  &:is(:active, .active){
    --card-icon-right: 0.5rem;
    outline: none;
    
    &:before {
      background: var(--colour-warning);
    }
    &:after {
      background: var(--colour-primary);
    }
  }

  &:is(:active){
    background: #FCFCFC;
  }
  

  
  span {
    display: block;
    font-weight: bold;
    padding-top: rem(24);
    font-size: rem(16);
  }

  &:has(.card__illustration) .card__body {

    align-items: center;
    display: flex;

    .card__illustration {
      height: rem(64);
      width: rem(64);
      margin-right: rem(24);
      margin-top: rem(-20);
      margin-bottom: rem(-20);
      position: relative;

      img {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        object-fit: contain;
      }
    }    
  }
}

::slotted(i){
  font-size: rem(24);
  margin: -3px var(--card-icon-right) 0 0;
  font-weight: 400;
  vertical-align: middle;
}

::slotted(span){
  display: block;
  font-weight: normal;
  padding-top: rem(24);
  font-size: rem(16);
}
// #endregion

// #region border left
.card[class*="colour-"],
.card--filter {
  
  border-left: rem(12) solid var(--colour,var(--colour-primary));
}
// #endregion

//#region Filter card
.card--filter {
  --top-padding: #{rem(24)};
  --right-padding: 1rem;
  --bottom-padding: #{rem(24)};
  --left-padding: 1rem;

  //border-left: rem(12) solid var(--colour,var(--colour-primary));

  &:has(.card__total) .card__body{

    align-items: center;
    display: flex;
  }

  &:before,
  &:after {
    display: none;
  }

  &:is(:hover,:focus,.hover) {
    outline: none;
      
    .card__body {
      background: #EEEEEE;
    }
  }

  &:is(:active, .active){
    
    .card__body {
      background: #E0E0E0;
    }
  }

  &:is(:checked, .checked){
    outline: 2px solid var(--colour,var(--colour-info));
    outline-offset: -2px;

    .card__body {
      background: #E0E0E0;
    }
  }

  &.card--has-icon {
    --bottom-padding: #{rem(16)};
    border: none;
  }

  .icon {
    font-size: rem(18)!important;
    height: rem(18)!important;
    margin: 0 0 0.5rem 0!important;
    font-weight: 400!important;
    display: block!important;
  }
    
  .card__total {
    font-size: rem(48);
    line-height: rem(48);
    padding-right: rem(16);
  }
}

@media screen and (prefers-color-scheme: dark) {
  .card--filter {

    .card__body {
      background: none!important;
    }

    &:is(:hover,:focus,.hover, :active, .active):not(:checked,.checked){ 
      outline: 2px solid var(--colour, var(--colour-primary))!important;
      outline-offset: -2px;

    }
  }
}

.card--filter ::slotted(i) {
  display: block !important;
  font-size: rem(18)!important;
  margin: 0 0 0.5rem 0!important;
}
// #endregion

// #region card with an image
.card:has(.card__head) {
  .card__head {
    padding-bottom: 0;
    padding-top: 27%;
    position: relative;
    overflow: hidden;
    background: rgba(0,0,0,0.1);
    z-index: -1;

    > img {
      position: absolute;
      top: 0;
      left: 0;
      width: 102%;
      height: 102%;
      object-fit: cover;
    }
  }
}

.card.card--lg-image:has(.card__head) .card__head{
  
  padding-top: 55%;
}
// #endregion

//#region card with a footer
.card:has(.card__footer){

  &:after {
    display: none;
  }

  .card__footer {
    position: relative;
    background: #ffffff;
    padding: var(--card-top-padding) var(--card-right-padding) var(--card-bottom-padding) var(--card-left-padding);
    z-index: -1;
    display: block;
  }
}
//#endregion


:host([data-selected]) .card {
  //background-color: yellow!important;

  &:before,
  &:after {
    display: none!important;
  }
}